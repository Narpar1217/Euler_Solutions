"""
CreateBatch_RunAll.py

Writes a batch file that runs all the Prob*.py files in order,
and writes their output to a file.

This script must be rerun when a new solution is added, or
the new solution(s) will not be included in a batch run.

This script must be located in the same directory as the
Prob*.py files to run as intended.


Author: Adam Beagle
"""

import re
from datetime import datetime
from os import listdir, path
from sys import argv

################################################################################
def BuildRedirectedEchoLine(msg, logfile, append=True):
    """
    Returns line of form "echo msg >>logfile\n"
    Send empty string as msg for newline (echo. >>logfile)
    If append is false, '>' will be used for redirection.
    """
    redir = '>' * (int(append) + 1)
    
    if msg:
        return 'echo ' + msg + ' ' + redir + logfile + '\n'
    else:
        return 'echo. ' + redir + logfile + '\n'

    
################################################################################
logfile = path.join('..', 'Last_run.txt')
thisFile = path.basename(argv[0])

now = datetime.now()
date = now.strftime('%Y-%m-%d')
time = now.strftime('%H:%M:%S')

header = 'PROJECT EULER -- Batch Run'
stars = '*' * (len(header) + 1)

fNamePattern = 'prob\d+\.py'
files = [s for s in listdir('.') if re.match(fNamePattern, s)]
probI = 1

with open('run_all.bat', 'w') as f:
    f.write('echo OFF\n')
    f.write('REM *** This file was automatically generated by ' + thisFile + ' ***\n')
    f.write('echo.\n')
    f.write('echo Starting Project Euler batch run...\n')
    f.write(BuildRedirectedEchoLine(stars, logfile, append=False))
    f.write(BuildRedirectedEchoLine(header, logfile))
    f.write(BuildRedirectedEchoLine('', logfile))
    f.write(BuildRedirectedEchoLine(date, logfile))
    f.write(BuildRedirectedEchoLine(time, logfile))
    f.write(BuildRedirectedEchoLine(stars, logfile))
    f.write(BuildRedirectedEchoLine('', logfile))
    
    while len(files) > 0:
        fName = 'prob' + str(probI) + '.py'
        if fName in files:
            f.write('echo Running ' + fName + '...\n')
            f.write(BuildRedirectedEchoLine('Problem ' + str(probI), logfile))
            f.write(BuildRedirectedEchoLine('----------------', logfile))
            line = 'python -OO ' + fName + ' >>' + logfile + ' 2>&1\n'
            f.write(line)
            f.write(BuildRedirectedEchoLine('', logfile))
            f.write(BuildRedirectedEchoLine('', logfile))
            files.remove(fName)

        probI += 1

    f.write('echo Complete. Output in ' + logfile + '.\n')
    f.write('echo.\n')
    f.write('pause\n')
